"use strict";(self.webpackChunkblogs_tutorials=self.webpackChunkblogs_tutorials||[]).push([[613],{4898:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var s=l(1914),i=l(4848),o=l(8453);const c={slug:"A-Z: MongoDB Cheat Sheet\ud83c\udf31",title:"A-Z: MongoDB Cheat Sheet\ud83c\udf31",authors:"burakboduroglu",tags:["mongodb","database","backend"]},t=void 0,a={authorsImageUrls:[void 0]},d=[{value:"Contents \ud83d\udcd6",id:"contents-",level:2},{value:"Definitions \ud83c\udf33",id:"definitions-",level:2},{value:"MongoDB Shell Commands \ud83c\udf43\ud83c\udf32",id:"mongodb-shell-commands-",level:2},{value:"Thank You \ud83c\udf3f",id:"thank-you-",level:2},{value:"References",id:"references",level:2},{value:"My other contents",id:"my-other-contents",level:2}];function r(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"contents-",children:"Contents \ud83d\udcd6"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#definitions",children:"Definitions"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#mongodb-shell-commands",children:"MongoDB Shell Commands"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#thank-you",children:"Thank You"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#references",children:"References"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"#my-other-contents",children:"My Other Contents"})}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"definitions-",children:"Definitions \ud83c\udf33"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"What is MongoDB?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"MongoDB is a document database with the scalability and flexibility that you want with the querying and indexing that you need."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"What is a Database?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"A database holds a set of collections. A database typically has a separate file system directory to hold its data. Each database gets its own set of files on the file system. Generally, you associate a database with one application."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"What is a Collection?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"A collection is a group of documents. If a document is the MongoDB analog of a row in a relational database table, then a collection is the analog of a table."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"What is a Document?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"A record in MongoDB is a document, which is a data structure composed of field and value pairs. MongoDB documents are similar to JSON objects. The values of fields may include other documents, arrays, and arrays of documents."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"What is a Field?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"A document has a dynamic schema. Dynamic schemas allow documents in the same collection to have different sets of fields and to have different field names for the common fields."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"What is a Primary Key?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"In MongoDB, each document stored in a collection requires a unique _id field that acts as a primary key. If an inserted document omits the _id field, the MongoDB driver automatically generates an ObjectId for the _id field."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Why use NoSQL?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"NoSQL databases are built to allow the insertion of data without a predefined schema. This makes NoSQL databases ideal for storing and processing unstructured data."}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Why use MongoDB?"})}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"MongoDB is a document database, which means it stores data in JSON-like documents. We believe this is the most natural way to think about data, and is much more expressive and powerful than the traditional row/column model."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"mongodb-shell-commands-",children:"MongoDB Shell Commands \ud83c\udf43\ud83c\udf32"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Show Database"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"show dbs\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will show all the databases in your MongoDB server."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Use Database"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"use <database_name>\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will switch to the database you want to use."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Show Collections"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"show collections\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will show all the collections in the database you are using."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Drop Database"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.dropDatabase()\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will drop the database you are using."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Create Collection"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:'db.createCollection("<collection_name>")\n'})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will create a collection in the database you are using."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Insert a Document"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.insertOne({\n    <key>: <value>,\n    <key>: <value>,\n    ...\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will insert a document in the collection you are using."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Insert Multiple Documents"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.insertMany([\n    {\n        <key>: <value>,\n        <key>: <value>,\n        ...\n    },\n    {\n        <key>: <value>,\n        <key>: <value>,\n        ...\n    },\n    ...\n])\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will insert multiple documents in the collection you are using."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Find Documents"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find()\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Find Documents with Query"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    <key>: <value>\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that match the query."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Count Documents"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    <key>: <value>\n    }).count()\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will count all the documents in the collection you are using that match the query."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Limit Documents"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find().limit(<number>)\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will limit the number of documents returned by the find command."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"forEach()"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:'db.<collection_name>.find().forEach(function(doc) {\n    print("Key: " + doc.<key> + " Value: " + doc.<value>);\n})\n'})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will iterate through all the documents in the collection you are using and print the key and value of each document."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Find One Document"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.findOne({\n    <key>: <value>\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find the first document in the collection you are using that matches the query."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Update a Document"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.updateOne({\n    <key>: <value>\n}, {\n    $set: {\n        <key>: <value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will update the first document in the collection you are using that matches the query. $set is used to update the document."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Increment a Document"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.updateOne({\n    <key>: <value>\n}, {\n    $inc: {\n        <key>: <value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will increment the value of the key in the first document in the collection you are using that matches the query. $inc is used to increment the value of the key."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Delete a Document"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.deleteOne({\n    <key>: <value>\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will delete the first document in the collection you are using that matches the query."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Add new field to a Document"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.updateOne({\n    <key>: <value>\n}, {\n    $set: {\n        <new_key>: <new_value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will add a new field to the first document in the collection you are using that matches the query."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Greater than"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    <key>: {\n        $gt: <value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that have a key greater than the value."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Greater than or equal to"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    <key>: {\n        $gte: <value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that have a key greater than or equal to the value."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Less than"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    <key>: {\n        $lt: <value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that have a key less than the value."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Less than or equal to"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    <key>: {\n        $lte: <value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that have a key less than or equal to the value."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Not equal to"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    <key>: {\n        $ne: <value>\n    }\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that have a key not equal to the value."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"And"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    $and: [\n        {\n            <key>: <value>\n        },\n        {\n            <key>: <value>\n        }\n    ]\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that match the query."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Or"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find({\n    $or: [\n        {\n            <key>: <value>\n        },\n        {\n            <key>: <value>\n        }\n    ]\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will find all the documents in the collection you are using that match the query."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Sort"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find().sort({\n    <key>: <value>\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will sort all the documents in the collection you are using by the key."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Sort Descending"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.find().sort({\n    <key>: -1\n})\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will sort all the documents in the collection you are using by the key in descending order."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"Drop Collection"})}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-nosql",children:"db.<collection_name>.drop()\n"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"This command will drop the collection you are using."}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"thank-you-",children:"Thank You \ud83c\udf3f"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"Thank you for taking the time to read my blog post! I hope you found it helpful and informative. Your support and engagement mean a lot to me. If you have any questions or feedback, please don\u2019t hesitate to reach out. I appreciate your continued interest and look forward to sharing more valuable content in the future. Thank you once again!"}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.mongodb.com/",children:"MongoDB"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://academy.patika.dev/",children:"Patika Academy"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://openai.com/blog/chatgpt",children:"ChatGPT"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.youtube.com/watch?v=-56x56UppqQ",children:"Traversy Media"})}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"my-other-contents",children:"My other contents"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://dev.to/burakboduroglu/boost-your-programming-efficiency-essential-tools-for-success-5h00",children:"Boost Your Programming Efficiency: Essential Tools for Success \u2699\ufe0f"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://dev.to/burakboduroglu/building-a-nodejs-server-without-using-expressjs-3mc8",children:"Building a Node.js Server Without Using Express.js\ud83d\udc24"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://dev.to/burakboduroglu/a-z-git-cheat-sheet-14pm",children:"A-Z: Git Cheat Sheet\ud83d\udd25"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://dev.to/burakboduroglu/js-guide-map-reduce-filter-and-foreach-methods-5fmi",children:"JS Guide: Map, Reduce, Filter and forEach Methods"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://dev.to/burakboduroglu/understanding-cors-and-same-origin-policy-in-web-security-54hm",children:"Understanding CORS and Same Origin Policy in Web Security\ud83d\udea8"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"#contents",children:"Back to Top"})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(r,{...n})}):r(n)}},8453:(n,e,l)=>{l.d(e,{R:()=>c,x:()=>t});var s=l(6540);const i={},o=s.createContext(i);function c(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),s.createElement(o.Provider,{value:e},n.children)}},1914:n=>{n.exports=JSON.parse('{"permalink":"/blogs-and-tutorials/blog/A-Z: MongoDB Cheat Sheet\ud83c\udf31","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-06-20-first-blog-post.md","source":"@site/blog/2023-06-20-first-blog-post.md","title":"A-Z: MongoDB Cheat Sheet\ud83c\udf31","description":"Contents \ud83d\udcd6","date":"2023-06-20T00:00:00.000Z","tags":[{"inline":false,"label":"MongoDB","permalink":"/blogs-and-tutorials/blog/tags/mongodb/","description":"MongoDB tag description"},{"inline":false,"label":"Database","permalink":"/blogs-and-tutorials/blog/tags/database/","description":"Database tag description"},{"inline":false,"label":"Backend","permalink":"/blogs-and-tutorials/blog/tags/backend/","description":"Backend tag description"}],"readingTime":6.51,"hasTruncateMarker":true,"authors":[{"name":"Burak Boduro\u011flu","title":"Front End Engineer","url":"https://github.com/burakboduroglu","page":{"permalink":"/blogs-and-tutorials/blog/authors/burakboduroglu"},"socials":{"linkedin":"https://www.linkedin.com/in/burakboduroglu/","github":"https://github.com/burakboduroglu"},"imageURL":"https://github.com/burakboduroglu.png","key":"burakboduroglu"}],"frontMatter":{"slug":"A-Z: MongoDB Cheat Sheet\ud83c\udf31","title":"A-Z: MongoDB Cheat Sheet\ud83c\udf31","authors":"burakboduroglu","tags":["mongodb","database","backend"]},"unlisted":false,"prevItem":{"title":"Spring Boot Cheat Sheet","permalink":"/blogs-and-tutorials/blog/Spring-Boot-Cheat-Sheet"}}')}}]);