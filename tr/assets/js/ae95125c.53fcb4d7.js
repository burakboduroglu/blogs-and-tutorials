"use strict";(self.webpackChunkblogs_tutorials=self.webpackChunkblogs_tutorials||[]).push([[130],{6176:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>o});var i=t(8034),l=t(4848),r=t(8453);const s={slug:"Spring-Boot-Cheat-Sheet",title:"Spring Boot Cheat Sheet",authors:"burakboduroglu",tags:["spring-boot","java","backend"]},a=void 0,d={authorsImageUrls:[void 0]},o=[{value:"\ud83c\udf31 Spring Annotations",id:"-spring-annotations",level:2},{value:"@Repository :",id:"repository-",level:3},{value:"@Service :",id:"service-",level:3},{value:"@Autowired :",id:"autowired-",level:3},{value:"@Controller :",id:"controller-",level:3},{value:"@RequestMapping :",id:"requestmapping-",level:3},{value:"@GetMapping :",id:"getmapping-",level:3},{value:"@PostMapping :",id:"postmapping-",level:3},{value:"@PutMapping :",id:"putmapping-",level:3},{value:"@DeleteMapping :",id:"deletemapping-",level:3},{value:"@PathVariable :",id:"pathvariable-",level:3},{value:"@RequestBody:",id:"requestbody",level:3},{value:"@RequestParam:",id:"requestparam",level:3},{value:"@RestController:",id:"restcontroller",level:3},{value:"Other posts",id:"other-posts",level:3},{value:"Accounts",id:"accounts",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"-spring-annotations",children:"\ud83c\udf31 Spring Annotations"}),"\n",(0,l.jsx)(n.h3,{id:"repository-",children:"@Repository :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Class Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It can reach the database and do all the operations."}),"\n",(0,l.jsx)(n.li,{children:"It make the connection between the database and the business logic."}),"\n",(0,l.jsx)(n.li,{children:"DAO is a repository."}),"\n",(0,l.jsx)(n.li,{children:"It is a marker interface."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@Repository\npublic class TestRepo{\n   public void add(){\n      System.out.println("Added");\n   }\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"service-",children:"@Service :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Class Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is a marker interface."}),"\n",(0,l.jsx)(n.li,{children:"It is a business logic."}),"\n",(0,l.jsx)(n.li,{children:"It is a service layer."}),"\n",(0,l.jsx)(n.li,{children:"It used to create a service layer."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"@Service\npublic class TestService{\n   public void service1(){\n      //business code (i\u015f kodlar\u0131)\n   }\n}\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"autowired-",children:"@Autowired :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Field Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is used to inject the dependency."}),"\n",(0,l.jsx)(n.li,{children:"It is used to inject the object."}),"\n",(0,l.jsx)(n.li,{children:"It is used to inject the object reference."}),"\n",(0,l.jsx)(n.li,{children:"Dependency Injection is a design pattern."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"public class Brand{\n   private int id;\n   private String name;\n\n   @Autowired\n   public Brand(int id, String name){\n     this.id = id;\n     this.name = name;\n   }\n}\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"controller-",children:"@Controller :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Class Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is a marker interface."}),"\n",(0,l.jsx)(n.li,{children:"It is a controller layer."}),"\n",(0,l.jsx)(n.li,{children:"It is used to create a controller layer."}),"\n",(0,l.jsx)(n.li,{children:"It use with @RequestMapping annotation."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@Controller\n@RequestMapping("/api/brands")\npublic class BrandsController{\n   @GetMapping("/getall")\n   public Employee getAll(){\n       return brandService.getAll();\n   }\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"requestmapping-",children:"@RequestMapping :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Method Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is used to map the HTTP request with specific method."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@Controller\n@RequestMapping("/api/brands")\npublic class BrandsController{\n   @GetMapping("/getall")\n   public Employee getAll(){\n       return brandService.getAll();\n   }\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getmapping-",children:"@GetMapping :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Method Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is used to map the HTTP GET request with specific method."}),"\n",(0,l.jsx)(n.li,{children:"It is used to get the data."}),"\n",(0,l.jsxs)(n.li,{children:["It is used to read the data.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@GetMapping("/getall")\npublic Employee getAll(){\n    return brandService.getAll();\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"postmapping-",children:"@PostMapping :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Method Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is used to map the HTTP POST request with specific method."}),"\n",(0,l.jsx)(n.li,{children:"It is used to add the data."}),"\n",(0,l.jsxs)(n.li,{children:["It is used to create the data.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@PostMapping("/add")\npublic void add(@RequestBody Brand brand){\n    brandService.add(brand);\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"putmapping-",children:"@PutMapping :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Method Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is used to map the HTTP PUT request with specific method."}),"\n",(0,l.jsxs)(n.li,{children:["It is used to update the data.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@PutMapping("/update")\npublic void update(@RequestBody Brand brand){\n    brandService.update(brand);\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"deletemapping-",children:"@DeleteMapping :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Method Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is used to map the HTTP DELETE request with specific method."}),"\n",(0,l.jsxs)(n.li,{children:["It is used to delete the data.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@DeleteMapping("/delete")\npublic void delete(@RequestBody Brand brand){\n    brandService.delete(brand);\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pathvariable-",children:"@PathVariable :"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Method Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is used to get the data from the URL."}),"\n",(0,l.jsxs)(n.li,{children:["It is the most suitable for RESTful web service that contains a path variable.","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@GetMapping("/getbyid/{id}")\npublic Brand getById(@PathVariable int id){\n    return brandService.getById(id);\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"requestbody",children:"@RequestBody:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"It is used to get the data from the request body."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"It is used to get the data from the HTTP request."}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"It is used to get the data from the HTTP request body."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@PostMapping("/add")\npublic void add(@RequestBody Brand brand){\n    brandService.add(brand);\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"requestparam",children:"@RequestParam:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"It is used to get the data from the URL."}),"\n",(0,l.jsx)(n.li,{children:"It is used to get the data from the URL query parameters."}),"\n",(0,l.jsx)(n.li,{children:"It is also known as query parameter."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@GetMapping("/getbyid")\npublic Brand getById(@RequestParam int id){\n    return brandService.getById(id);\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"restcontroller",children:"@RestController:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Class Level Annotation"}),"\n",(0,l.jsx)(n.li,{children:"It is a marker interface."}),"\n",(0,l.jsx)(n.li,{children:"It is a controller layer."}),"\n",(0,l.jsx)(n.li,{children:"It is used to create a controller layer."}),"\n",(0,l.jsx)(n.li,{children:"It use with @RequestMapping annotation."}),"\n",(0,l.jsx)(n.li,{children:"It is a combination of @Controller and @ResponseBody annotations."}),"\n",(0,l.jsx)(n.li,{children:"@RestController annotation is explained with @ResponseBody annotation."}),"\n",(0,l.jsx)(n.li,{children:"@ResponseBody eliminates the need to add a comment to every method."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@RestController\n@RequestMapping("/api/brands")\npublic class BrandsController{\n   @GetMapping("/getall")\n   public Employee getAll(){\n       return brandService.getAll();\n   }\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If you like this article, you can give me a like on. \ud83d\ude0e\nThanks for reading. \ud83d\ude4f"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"other-posts",children:"Other posts"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://dev.to/burakboduroglu/hibernate-cheat-sheet-2dke",children:"Hibernate Guide"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://dev.to/burakboduroglu/building-the-future-a-beginners-guide-to-software-development-2ih8",children:"Beginner Guide"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://dev.to/burakboduroglu/mongodb-cheat-sheet-1a6a",children:"MongoDB"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://dev.to/burakboduroglu/behind-the-scenes-exploring-powerful-backend-frameworks-1an1",children:"Behind the Scenes: Exploring Powerful Backend Frameworks"})}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"accounts",children:"Accounts"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://bento.me/burakboduroglu",children:"Visit my page\u2705"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/burakboduroglu",children:"GitHub"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const l={},r=i.createContext(l);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(r.Provider,{value:n},e.children)}},8034:e=>{e.exports=JSON.parse('{"permalink":"/blogs-and-tutorials/tr/blog/Spring-Boot-Cheat-Sheet","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-11-12-spring-boot-post.md","source":"@site/blog/2023-11-12-spring-boot-post.md","title":"Spring Boot Cheat Sheet","description":"\ud83c\udf31 Spring Annotations","date":"2023-11-12T00:00:00.000Z","tags":[{"inline":false,"label":"Spring Boot","permalink":"/blogs-and-tutorials/tr/blog/tags/spring-boot/","description":"Spring Boot tag description"},{"inline":false,"label":"Java","permalink":"/blogs-and-tutorials/tr/blog/tags/java/","description":"Java tag description"},{"inline":false,"label":"Backend","permalink":"/blogs-and-tutorials/tr/blog/tags/backend/","description":"Backend tag description"}],"readingTime":3.49,"hasTruncateMarker":true,"authors":[{"name":"Burak Boduro\u011flu","title":"Front End Engineer","url":"https://github.com/burakboduroglu","page":{"permalink":"/blogs-and-tutorials/tr/blog/authors/burakboduroglu"},"socials":{"linkedin":"https://www.linkedin.com/in/burakboduroglu/","github":"https://github.com/burakboduroglu"},"imageURL":"https://github.com/burakboduroglu.png","key":"burakboduroglu"}],"frontMatter":{"slug":"Spring-Boot-Cheat-Sheet","title":"Spring Boot Cheat Sheet","authors":"burakboduroglu","tags":["spring-boot","java","backend"]},"unlisted":false,"nextItem":{"title":"A-Z: MongoDB Cheat Sheet\ud83c\udf31","permalink":"/blogs-and-tutorials/tr/blog/A-Z: MongoDB Cheat Sheet\ud83c\udf31"}}')}}]);